/* ====== Global Styles ====== */
body {
  overflow: hidden;
}
.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: #fff;
  font-family: 'Poppins', sans-serif;
}

/* ====== Header Section ====== */
.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  border-bottom: 1px solid #ccc;
  flex-shrink: 0;
  position: relative;
}

.menuButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  margin-right: auto;
  z-index: 2;
}

.menuIconLine {
  width: 25px;
  height: 3px;
  background-color: #000;
  margin: 5px 0;
}

.logo {
  font-size: 1.5rem;
  font-weight: bold;
  color: #000;
  margin: 0;
  text-transform: lowercase;
  text-align: center;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

/* ====== Main Content Section ====== */
.mainContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 1rem 1rem 4rem;
  gap: 1rem;
  min-height: 0;
}

.chatContainer {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0.5rem 0;
  min-height: 0;
}

/* ====== Question Section ====== */
.questionContainer {
  padding: 0;
  text-align: center;
  max-height: 100%;
  width: 100%;
}

.question {
  font-size: 1.2rem;
  font-weight: normal;
  color: #000;
  text-transform: lowercase;
  margin: 0;
  display: inline-block;
  line-height: 1.3;
}

/* ====== Input Section ====== */
.inputArea {
  display: flex;
  align-items: center;
  background-color: #333;
  border-radius: 25px;
  border: 2px solid black;
  padding: 0.5rem 1rem;
  margin-top: auto;
  position: sticky;
  /* bottom: 5rem; */
  z-index: 1;
  margin: 0 1rem;
}

.input {
  flex: 1;
  border: none;
  background: none;
  outline: none;
  color: #fff;
  font-size: 1rem;
  padding: 0.5rem 0;
}

.input::placeholder {
  color: #aaa;
  font-style: italic;
  text-transform: lowercase;
}

/* ====== Button Section ====== */
.buttonContainer {
  display: flex;
  margin-left: auto;
}

.iconButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  margin-left: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.iconButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.iconButton svg {
  width: 20px;
  height: 20px;
  fill: #fff;
}

/* ====== Listening Animation ====== */
.listening {
  background-color: rgba(255, 0, 0, 0.2);
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 1;
  }
}

/* ====== Status Message ====== */
.statusMessage {
  font-size: 0.9rem;
  text-align: center;
  margin-top: 10px;
  color: #666;
  font-style: italic;
}

/* ====== Responsive Adjustments (Media Queries) ====== */

/* Very Small Screens (e.g., older phones) */
@media (max-width: 320px) {
  .header {
    padding: 0.5rem;
  }
  .menuButton {
    margin-right: 0;
  }
  .logo {
    font-size: 1rem;
    margin-right: 10px;
  }
  .question {
    font-size: 1rem;
  }
  .inputArea {
    margin: 0.2rem;
    padding: 0 0.2rem;
  }
}

/* Small Screens (e.g., mobile phones) */
@media (max-width: 600px) {
  .header {
    padding: 0.75rem;
  }
  .logo {
    font-size: 1.2rem;
    margin-right: 20px;
  }
  .menuButton {
    margin-right: 0px;
  }
  .questionContainer {
    padding: 0.5rem;
  }
  .question {
    font-size: 1.1rem;
  }
  .inputArea {
    margin: 0.3rem;
    padding: 0.2rem 0.3rem;
  }
  .input {
    font-size: 0.9rem;
    padding: 0.4rem 0;
  }
  .iconButton {
    width: 30px;
    height: 30px;
    margin-left: 0.5rem;
  }
  .iconButton svg {
    width: 18px;
    height: 18px;
  }
}

/* Medium Screens (e.g., tablets) */
@media (min-width: 601px) and (max-width: 1024px) {
  .logo {
    font-size: 1.4rem;
  }
  .questionContainer {
    padding: 0.75rem;
  }
  .question {
    font-size: 1.4rem;
  }
  .input {
    font-size: 0.95rem;
  }
}

.loadingIndicator {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px;
  color: #666;
}

.loadingIndicator span {
  position: relative;
}

.loadingIndicator span:after {
  content: '...';
  position: absolute;
  width: 0;
  animation: loading 1.5s infinite;
  overflow: hidden;
}

@keyframes loading {
  0% {
    width: 0;
  }
  100% {
    width: 20px;
  }
}

/* About Page Specific Styles */
.aboutContainer {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
}

.heroSection {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  margin-bottom: 4rem;
  align-items: center;
}

.heroText {
  padding: 2rem;
}

.heroTitle {
  font-size: 2.5rem;
  color: #2d3436;
  margin-bottom: 1rem;
  line-height: 1.2;
}

.heroSubtitle {
  font-size: 1.25rem;
  color: #636e72;
  margin-bottom: 2rem;
}

.heroIllustration {
  height: 300px;
  background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
  border-radius: 1rem;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.featureGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  margin-bottom: 4rem;
}

.featureCard {
  padding: 2rem;
  background: white;
  border-radius: 1rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
  text-align: center;
}

.featureCard:hover {
  transform: translateY(-5px);
}

.featureIcon {
  width: 3rem;
  height: 3rem;
  margin: 0 auto 1rem;
  color: #e55039;
}

.sectionTitle {
  font-size: 2rem;
  color: #2d3436;
  text-align: center;
  margin-bottom: 2rem;
}

.sectionBody {
  font-size: 1.1rem;
  line-height: 1.6;
  color: #636e72;
  max-width: 800px;
  margin: 0 auto;
  text-align: center;
}

@media (max-width: 768px) {
  .heroSection {
    grid-template-columns: 1fr;
    text-align: center;
  }

  .heroTitle {
    font-size: 2rem;
  }

  .heroSubtitle {
    font-size: 1.1rem;
  }

  .heroIllustration {
    height: 200px;
  }
}

.heroIllustration {
  position: relative;
  height: 300px;
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  border-radius: 1rem;
  overflow: hidden;
}

.fridgeContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  gap: 2rem;
}

.fridgeDoor {
  width: 150px;
  height: 250px;
  background: #f1f3f5;
  border: 3px solid #dee2e6;
  border-radius: 10px;
  position: relative;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.1);
  animation: fridgeFloat 3s ease-in-out infinite;
}

.fridgeShelves {
  padding: 20px;
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.shelf {
  flex: 1;
  border-bottom: 2px solid #dee2e6;
  display: flex;
  gap: 10px;
  padding: 5px;
}

.ingredient {
  font-size: 1.5rem;
  opacity: 0;
  animation: ingredientAppear 0.5s forwards;
}

.egg {
  animation-delay: 0.5s;
}
.milk {
  animation-delay: 0.7s;
}
.veg {
  animation-delay: 0.9s;
}
.meat {
  animation-delay: 1.1s;
}

.recipeTransition {
  position: relative;
  width: 80px;
}

.arrow {
  width: 40px;
  height: 4px;
  background: #4dabf7;
  position: relative;
  animation: arrowFlow 1.5s infinite;
}

.arrow::after {
  content: '';
  position: absolute;
  right: -8px;
  top: -6px;
  border: 8px solid transparent;
  border-left-color: #4dabf7;
}

.sparkles {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(#4dabf7 10%, transparent 11%);
  background-size: 20px 20px;
  opacity: 0;
  animation: sparkle 1s infinite;
}

.recipeCard {
  width: 120px;
  height: 160px;
  background: white;
  border-radius: 10px;
  padding: 15px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  animation: cardFloat 3s ease-in-out infinite;
}

.recipeIcon {
  font-size: 2.5rem;
  margin-bottom: 10px;
}

.recipeText {
  font-weight: bold;
  color: #75acff;
  text-align: center;
}

@keyframes fridgeFloat {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes ingredientAppear {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes arrowFlow {
  0% {
    width: 40px;
    opacity: 0;
  }
  50% {
    width: 60px;
    opacity: 1;
  }
  100% {
    width: 40px;
    opacity: 0;
  }
}

@keyframes sparkle {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
  }
}

@keyframes cardFloat {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-5px);
  }
}
/* Loading container styling */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  margin: 1rem auto;
  max-width: 300px;
  text-align: center;
  border-radius: 12px;
  background-color: #f5f5f5;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

/* Loading text styling */
.loadingText {
  font-size: 1rem;
  color: #333333;
  margin-top: 1rem;
  text-transform: lowercase;
  letter-spacing: 0.5px;
  position: relative;
  font-weight: 500;
}

/* Dot animation for loading text */
.loadingText::after {
  content: '';
  animation: loadingDots 1.5s infinite;
}

@keyframes loadingDots {
  0% {
    content: '.';
  }
  33% {
    content: '..';
  }
  66% {
    content: '...';
  }
  100% {
    content: '.';
  }
}

/* ====== Image Analysis Animation ====== */
.imageAnalysisAnimation {
  width: 120px;
  height: 120px;
  position: relative;
  margin-bottom: 0.5rem;
}

.scanLine {
  position: absolute;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, #666666, transparent);
  top: 0;
  animation: scanAnimation 2s infinite;
}

.imageFrame {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 2px dashed #888888;
  border-radius: 8px;
  overflow: hidden;
  animation: pulse 2s infinite;
}

.cornerTL,
.cornerTR,
.cornerBL,
.cornerBR {
  position: absolute;
  width: 20px;
  height: 20px;
  border-color: #444444;
  border-style: solid;
  border-width: 0;
}

.cornerTL {
  top: 0;
  left: 0;
  border-top-width: 2px;
  border-left-width: 2px;
}

.cornerTR {
  top: 0;
  right: 0;
  border-top-width: 2px;
  border-right-width: 2px;
}

.cornerBL {
  bottom: 0;
  left: 0;
  border-bottom-width: 2px;
  border-left-width: 2px;
}

.cornerBR {
  bottom: 0;
  right: 0;
  border-bottom-width: 2px;
  border-right-width: 2px;
}

@keyframes scanAnimation {
  0% {
    top: 0;
    opacity: 0.8;
  }
  50% {
    top: calc(100% - 2px);
    opacity: 1;
  }
  100% {
    top: 0;
    opacity: 0.8;
  }
}

/* ====== Thinking Animation ====== */
.thinkingAnimation {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 0.5rem;
}

.brain {
  width: 60px;
  height: 60px;
  position: relative;
}

.brainPath {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: #555555;
  animation: brainRotate 2s linear infinite;
}

.brainPath:nth-child(2) {
  width: 80%;
  height: 80%;
  top: 10%;
  left: 10%;
  border-top-color: #666666;
  animation: brainRotate 1.5s linear infinite reverse;
}

.brainPath:nth-child(3) {
  width: 60%;
  height: 60%;
  top: 20%;
  left: 20%;
  border-top-color: #777777;
  animation: brainRotate 1s linear infinite;
}

.thoughtBubbles {
  position: absolute;
  top: -15px;
  right: -10px;
  display: flex;
  gap: 3px;
}

.bubble {
  width: 8px;
  height: 8px;
  background-color: #666666;
  border-radius: 50%;
  opacity: 0;
  animation: bubbleFloat 1.5s infinite;
}

.bubble:nth-child(2) {
  animation-delay: 0.5s;
}

.bubble:nth-child(3) {
  animation-delay: 1s;
}

@keyframes brainRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes bubbleFloat {
  0% {
    opacity: 0;
    transform: translateY(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-10px);
  }
  100% {
    opacity: 0;
    transform: translateY(-20px);
  }
}

/* Pulse animation used by multiple elements */
@keyframes pulse {
  0%,
  100% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
}

/* ====== Accessibility ====== */
@media (prefers-reduced-motion: reduce) {
  .scanLine,
  .brainPath,
  .bubble,
  .loadingText::after {
    animation: none;
  }

  .loadingText::after {
    content: '...';
  }
}
